# Scaffolding generated by Casein v5.1.1.5

module Casein
  class PlanesController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Planes'
  		@planes = Plane.order(sort_order(:name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View plane'
      @plane = Plane.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new plane'
    	@plane = Plane.new
    end

    def create
      @plane = Plane.new plane_params
    
      if @plane.save
        flash[:notice] = 'Plane created'
        redirect_to casein_planes_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new plane'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update plane'
      
      @plane = Plane.find params[:id]
    
      if @plane.update_attributes plane_params
        flash[:notice] = 'Plane has been updated'
        redirect_to casein_planes_path
      else
        flash.now[:warning] = 'There were problems when trying to update this plane'
        render :action => :show
      end
    end
 
    def destroy
      @plane = Plane.find params[:id]

      @plane.destroy
      flash[:notice] = 'Plane has been deleted'
      redirect_to casein_planes_path
    end
  
    private
      
      def plane_params
        params.require(:plane).permit(:name, :rows, :columns)
      end

  end
end